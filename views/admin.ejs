<html>

<head>
    <% include partials/head.ejs %>
</head>

<body>
    <% include partials/navbar.ejs %>

    <div class="jumbotron container center">
        Upload List
    </div><br />
    <form method="post" class="container" enctype="multipart/form-data" action="/upload">
        <div class="row"><input type="file" class="btn" id="thumbnail" name="thumbnail" onchange="fileSelected();"
                multiple><br>
            <div id="filename"></div>
            <div id="filesize"></div> <br>
        </div>
        <div class="row text-center">
            <input type="button" class="btn btn-lg btn-primary" onclick="uploadFile()" value="Upload">
            <input type="submit" class="btn btn-lg btn-primary"  value="Upload">
        </div><br>
        <div class="container">
            <div class="progress">
                <div class="progress-bar" id="progressNumber" role="progressbar" aria-valuenow="70" aria-valuemin="0"
                    aria-valuemax="100" style="width:0%; color:black;background-color:#00e600; ">
                    0%
                </div>
            </div>
        </div>
    </form>
    <script>
        function fileSelected() {
            var files = document.getElementById('thumbnail').files;
            document.getElementById('filename').innerHTML = '';
            for (x = 0; x < files.length; x++) {
                file = files[x]
                if (file) {
                    var filesize = 0;
                    if (file.size > 1024 * 1024) {
                        filesize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
                    }
                    else {
                        filesize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
                    }
                    document.getElementById('filename').innerHTML += 'Name:' + file.name + "<br/>Size:" + filesize + "<br/>";

                }
            }
        }
        function uploadFile() {
            var fd = new FormData();
            var ins = document.getElementById('thumbnail').files;
            console.log(ins[0]);
            
            for (var x = 0; x < ins.length; x++) {
                fd.append("thumbnail", document.getElementById('thumbnail').files[x].data);
            }
            var xhr = new XMLHttpRequest();
            xhr.upload.addEventListener("progress", uploadProgress, false);
            xhr.addEventListener("load", uploadComplete, false);
            xhr.addEventListener("error", uploadFailed, false);
            xhr.addEventListener("abort", uploadCanceled, false);
            xhr.open("post", "/upload", true);
            xhr.send(fd);
        }
        function uploadProgress(evt) {
            if (evt.lengthComputable) {
                var percentage = Math.round(evt.loaded * 100 / evt.total);
                document.getElementById('progressNumber').innerHTML = percentage + '%';
                $('.progress-bar').css('width', percentage + '%');

            }
            else
                document.getElementById('progressNumber').innerHTML = 'unable to compute!';
        }
        function uploadComplete(evt) {
            /* This event is raised when the server send back a response */
            alert(evt.target.responseText);
        }

        function uploadFailed(evt) {
            alert("There was an error attempting to upload the file.");
        }

        function uploadCanceled(evt) {
            alert("The upload has been canceled by the user or the browser dropped the connection.");
        }
    </script>

</body>

</html>